// Generated by view binder compiler. Do not edit!
package com.binar.ccgameandprofile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.binar.ccgameandprofile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnDialogAddAdd;

  @NonNull
  public final Button btnDialogAddCancel;

  @NonNull
  public final EditText etDialogAddIsi;

  @NonNull
  public final EditText etDialogAddTanggal;

  private DialogAddBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnDialogAddAdd,
      @NonNull Button btnDialogAddCancel, @NonNull EditText etDialogAddIsi,
      @NonNull EditText etDialogAddTanggal) {
    this.rootView = rootView;
    this.btnDialogAddAdd = btnDialogAddAdd;
    this.btnDialogAddCancel = btnDialogAddCancel;
    this.etDialogAddIsi = etDialogAddIsi;
    this.etDialogAddTanggal = etDialogAddTanggal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_dialog_add_add;
      Button btnDialogAddAdd = rootView.findViewById(id);
      if (btnDialogAddAdd == null) {
        break missingId;
      }

      id = R.id.btn_dialog_add_cancel;
      Button btnDialogAddCancel = rootView.findViewById(id);
      if (btnDialogAddCancel == null) {
        break missingId;
      }

      id = R.id.et_dialog_add_isi;
      EditText etDialogAddIsi = rootView.findViewById(id);
      if (etDialogAddIsi == null) {
        break missingId;
      }

      id = R.id.et_dialog_add_tanggal;
      EditText etDialogAddTanggal = rootView.findViewById(id);
      if (etDialogAddTanggal == null) {
        break missingId;
      }

      return new DialogAddBinding((ConstraintLayout) rootView, btnDialogAddAdd, btnDialogAddCancel,
          etDialogAddIsi, etDialogAddTanggal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
